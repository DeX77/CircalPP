{"body":"SMALL TUTORIAL FOR CIRCALPP\r\n=============\r\n\r\n[![Build Status](https://secure.travis-ci.org/DeX77/CircalPP.png)](http://travis-ci.org/DeX77/CircalPP)\r\n\r\nHow to get it\r\n-------\r\n\r\nThe up to date version of CircalPP can always be downloaded in form of a tar.bz2\r\narchive from\r\nhttp://www.bioinf.uni-leipzig.de. Additionally it is possible to get the\r\nlatest state of the art version via GIT by:\r\ngit clone git://github.com/DeX77/CircalPP.git\r\n\r\nDependencies\r\n-------\r\n\r\nCircalPP depends on three of the BioPP Libraries, obtainable from\r\nhttp://biopp.univ-montp2.fr at least version 2.0.3 is needed, because CircalPP makes\r\nuse of the introduced namespaces. It is recommended to use a C++ compiler pro-\r\nviding the at least the tr1 lib or newer: CircalPP will make use of the new un-\r\nordered map container introduced by TR1.\r\n\r\nInstallation\r\n-------\r\n\r\nUncompressed the tar.bz2 archive via tar -xjvf <tar-ball> Or, if you got it\r\nvia git run ./autogen.sh in the source directory, to create the necessary ﬁles.\r\nAfterward the standard Unix ./configure && make && make install is\r\nneeded to build CircalPP.\r\n\r\nFirst run\r\n-------\r\n\r\nWhen you run the tool without any options it will present you the following:\r\n\r\n> usage: CircalPP [options]  \r\noptions:  \r\n-v verbose mode  \r\n-b brute-force mode  \r\n-m build multiple alignment using t-coffee  \r\n-s output results stepwise (for very large files)  \r\n-t <integer> random sequences statistics up to size n  \r\n-d <integer> delta value  \r\n-D input is dna  \r\n-R input is rna  \r\n-G alphabet is build from scoring scheme  \r\n-S <filename> file including the scoring scheme  \r\n-I <filename> read data from fasta file instead of stdin  \r\n-F <filename> write all pairwise alignments as fasta to  \r\n-O <filename> write output to <filename> instead of stdout\r\n\r\nFrom these only the used Scoring scheme and the used alphabet type are an obliga-\r\ntion. It is recommended to change the delta value, because it defaults to 1. Input\r\nﬁles must be in Fasta format. All ﬁles mentioned in this thesis, and some smaller\r\ntest examples are included in the testcases directory.\r\nExtending CircalPP\r\nExtending CircalPP to your own needs is easy: all you have to change is in\r\nCircalPP.cpp in the src directory.\r\n\r\nLicence\r\n-------\r\n\r\nI thereby place CircalPP under the GNU Public licence version 2. Anyone can\r\nuse it under these terms.","name":"CircalPP","tagline":"Circular Alignments in C++","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}